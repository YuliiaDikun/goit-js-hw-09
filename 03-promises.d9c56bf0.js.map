{"mappings":"YAAA,IAAMA,EAASC,SAASC,cAAc,SAEtCF,EAAOG,iBAAiB,UAExB,SAAsBC,G,kBAMlBC,YAAW,YAUf,SAAuBC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAQtC,OAPgB,IAAIC,SAAQ,SAACC,EAASC,GACpC,GAAIL,EACF,OAAOI,EAAQ,CAAEN,WAAUC,UAE3BM,EAAO,S,KAbPC,CAFiBC,EAAI,EACHR,EAAQS,EAAOD,GAE9BE,MAAK,SAAAC,G,OAAQC,QAAQC,IAAIF,E,IACzBG,OAAM,SAAAC,G,OAASH,QAAQC,IAAIE,E,MAC7Bf,EAAQS,EAAOD,E,EAXpBX,EAAEmB,iBAIF,IAHA,IAAMhB,EAAQiB,OAAOxB,EAAOyB,SAASlB,MAAMmB,OACrCV,EAAOQ,OAAOxB,EAAOyB,SAAST,KAAKU,OACnCC,EAASH,OAAOxB,EAAOyB,SAASE,OAAOD,OACpCE,EAAI,EAAGA,EAAID,EAAQC,IAAGC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["const formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const delay = Number(formEl.elements.delay.value);\n  const step = Number(formEl.elements.step.value);\n  const amount = Number(formEl.elements.amount.value);\n  for (let i = 0; i < amount; i++) {\n    setTimeout(() => {\n      const position = i + 1;\n      const delayProm = delay + step * i;\n      createPromise(position, delayProm)\n        .then(data => console.log(data))\n        .catch(error => console.log(error));\n    }, delay + step * i);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      return resolve({ position, delay });\n    } else {\n      reject('Error!');\n    }\n  });\n  return promise;\n}\n"],"names":["$ce04d3a99e08e73b$var$formEl","document","querySelector","addEventListener","e","setTimeout","position","delay","shouldResolve","Math","random","Promise","resolve","reject","$ce04d3a99e08e73b$var$createPromise","i","step","then","data","console","log","catch","error","preventDefault","Number","elements","value","amount","i1","_loop"],"version":3,"file":"03-promises.d9c56bf0.js.map"}