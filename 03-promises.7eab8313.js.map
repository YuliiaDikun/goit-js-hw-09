{"mappings":"AAAA,MAAMA,EAASC,SAASC,cAAc,SAoBtC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAQtC,OAPgB,IAAIC,SAAQ,CAACC,EAASC,KACpC,GAAIL,EACF,OAAOI,EAAQ,C,SAAEN,E,MAAUC,IAE3BM,EAAO,SAAS,G,CAxBtBX,EAAOY,iBAAiB,UAExB,SAAsBC,GACpBA,EAAEC,iBACF,MAAMT,EAAQU,OAAOf,EAAOgB,SAASX,MAAMY,OACrCC,EAAOH,OAAOf,EAAOgB,SAASE,KAAKD,OACnCE,EAASJ,OAAOf,EAAOgB,SAASG,OAAOF,OAC7C,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAQC,IAC1BC,YAAW,KAGTlB,EAFiBiB,EAAI,EACHf,EAAQa,EAAOE,GAE9BE,MAAKC,GAAQC,QAAQC,IAAIF,KACzBG,OAAMC,GAASH,QAAQC,IAAIE,IAAO,GACpCtB,EAAQa,EAAOE,E","sources":["src/js/03-promises.js"],"sourcesContent":["const formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const delay = Number(formEl.elements.delay.value);\n  const step = Number(formEl.elements.step.value);\n  const amount = Number(formEl.elements.amount.value);\n  for (let i = 0; i < amount; i++) {\n    setTimeout(() => {\n      const position = i + 1;\n      const delayProm = delay + step * i;\n      createPromise(position, delayProm)\n        .then(data => console.log(data))\n        .catch(error => console.log(error));\n    }, delay + step * i);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      return resolve({ position, delay });\n    } else {\n      reject('Error!');\n    }\n  });\n  return promise;\n}\n"],"names":["$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","addEventListener","e","preventDefault","Number","elements","value","step","amount","i","setTimeout","then","data","console","log","catch","error"],"version":3,"file":"03-promises.7eab8313.js.map"}